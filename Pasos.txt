emotion api
e7dc69816811465d9fae1be4dc68b202
computer vision api
c32a638a6d0342f0bca1d3862cbd5604

Paso1. Crear app multiplataforma
Paso2. Crear las carpetas Datos, Clases y Paginas
Paso3. Agregar los paquetes nuget a la app Android
	xam.plugin.media
	microsoft.Bcl.Build
	Microsoft.ProjectOxford.Emotion
	Microsoft.ProjectOxford.Vision
Paso4. Agregar using Plugin.Permissions
Paso5. Pegar código en MainActivity
public override void OnRequestPermissionsResult(int requestCode, string[] permissions, Permission[] grantResults)
{
    PermissionsImplementation.Current.OnRequestPermissionsResult(requestCode, permissions, grantResults);
}
Paso6. Agregar permisos en el Manifest
	READ_EXTERNAL_STORAGE
	WRITE_EXTERNAL_STORAGE

Paso7. Agregar en el archivo AssemblyInfo 
	[assembly: UsesFeature("android.hardware.camera", Required = false)]
	[assembly: UsesFeature("android.hardware.camera.autofocus", Required = false)]
Paso8. En la carpeta Datos crear una clase denominada ServicioImagenes
	using Plugin.Media;
	using Plugin.Media.Abstractions;
	using System.Threading.Tasks;

namespace ServiciosCognitivos.Clases
{
    class ServicioImagenes
    {
        public static async Task<MediaFile> TomarFoto(bool usarCamara)
        {
            await CrossMedia.Current.Initialize();

            if (usarCamara)
            {
                if (!CrossMedia.Current.IsCameraAvailable || !CrossMedia.Current.IsTakePhotoSupported)
                {
                    return null;
                }
            }

            var file = usarCamara
                ? await CrossMedia.Current.TakePhotoAsync(new StoreCameraMediaOptions
                {
                    Directory = "Cognitive",
                    Name = "test.jpg"
                })
                : await CrossMedia.Current.PickPhotoAsync();

            return file;
        }

    }
}
Paso9. Crear clase ServicioEmociones
using Microsoft.ProjectOxford.Emotion;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Collections.Generic;

namespace ServiciosCognitivos.Clases
{
    class ServicioEmociones
    {
        static string key = "LLAVE API EMOCIONES";

        public static async Task<Dictionary<string, float>> ObtenerEmociones(Stream stream)
        {
            EmotionServiceClient cliente = new EmotionServiceClient(key);
            var emociones = await cliente.RecognizeAsync(stream);

            if (emociones == null || emociones.Count() == 0)
                return null;

            return emociones[0].Scores.ToRankedList().ToDictionary(x => x.Key, x => x.Value);
        }

    }
}
Paso10. Crear la clase ServicioComputerVision
using System.IO;
using System.Linq;
using Microsoft.ProjectOxford.Vision;
using System.Threading.Tasks;
using Microsoft.ProjectOxford.Vision.Contract;


namespace ServiciosCognitivos.Clases
{
    class ServicioComputerVision
    {
        static string key = "LLAVE API COMPUTER VISION";

        public static async Task<AnalysisResult> ObtenerDescripcionImagen(Stream imageStream)
        {
            VisionServiceClient cliente = new VisionServiceClient(key);
            VisualFeature[] features =
            {
                VisualFeature.Tags,
                VisualFeature.Categories,
                VisualFeature.Description,
                VisualFeature.Adult,
                VisualFeature.ImageType,
                VisualFeature.Color,
                VisualFeature.Faces
            };

            return await cliente.AnalyzeImageAsync(imageStream, features.ToList(), null);
        }

    }
}
Paso11. En la carpeta Paginas crear un Formulario en blanco con el
nombre PaginaAnalisisEmociones
	CODIGO XAML
	
	<StackLayout Padding="0">
    <Image x:Name="imgFoto" WidthRequest="150" HeightRequest="150" Aspect="AspectFit"/>
    <Button x:Name="btnCamara" x:Id="btnCamara" Text="Usar cámara" Clicked="btnFoto_Clicked"/>
    <Button x:Name="btnGaleria" x:Id="btnGaleria" Text="Seleccionar de la galería" Clicked="btnFoto_Clicked"/>
    <Button x:Name="btnAnalizarEmociones" Text="Analizar emociones" Clicked="btnAnalizarEmociones_Clicked"/>
    <Label x:Name="lblResultado" Text="---" />
    <StackLayout x:Name="panelResultados"/>
  </StackLayout>
	
	CODIGO C#
	
	using System.IO;
	using ServiciosCognitivos.Clases;
	
	        static Stream streamCopy;

 async void btnFoto_Clicked(object sender, EventArgs e)
        {
            var usarCamara = ((Button)sender).Text.Contains("cámara");
            var file = await ServicioImagenes.TomarFoto(usarCamara);
            panelResultados.Children.Clear();
            lblResultado.Text = "---";

            imgFoto.Source = ImageSource.FromStream(() => {
                var stream = file.GetStream();
                streamCopy = new MemoryStream();
                stream.CopyTo(streamCopy);
                stream.Seek(0, SeekOrigin.Begin);
                file.Dispose();
                return stream;
            });
        }

        async void btnAnalizarEmociones_Clicked(object sender, EventArgs e)
        {
            if (streamCopy != null)
            {
                streamCopy.Seek(0, SeekOrigin.Begin);
                var emociones = await ServicioEmociones.ObtenerEmociones(streamCopy);

                if (emociones != null)
                {
                    lblResultado.Text = "---Análisis de Emociones---";
                    DibujarResultados(emociones);
                }
                else lblResultado.Text = "---No se detectó una cara---";
            }
            else lblResultado.Text = "---No has seleccionado una imagen---";
        }

        void DibujarResultados(Dictionary<string, float> emociones)
        {
            panelResultados.Children.Clear();

            foreach (var emocion in emociones)
            {
                Label lblEmocion = new Label()
                {
                    Text = emocion.Key,
                    TextColor = Color.Blue,
                    WidthRequest = 90
                };

                BoxView box = new BoxView()
                {
                    Color = Color.Lime,
                    WidthRequest = 150 * emocion.Value,
                    HeightRequest = 30,
                    HorizontalOptions = LayoutOptions.StartAndExpand
                };

                Label lblPorcentaje = new Label()
                {
                    Text = emocion.Value.ToString("P4"),
                    TextColor = Color.Maroon
                };

                StackLayout panel = new StackLayout()
                {
                    Orientation = StackOrientation.Horizontal
                };

                panel.Children.Add(lblEmocion);
                panel.Children.Add(box);
                panel.Children.Add(lblPorcentaje);

                panelResultados.Children.Add(panel);
            }
        }

Paso12. Crear la página PaginaAnalisisComputerVision
CODIGO XAML

    <StackLayout VerticalOptions="FillAndExpand">
        <Image x:Name="imgFoto" WidthRequest="150" HeightRequest="150" Aspect="AspectFit"/>
        <Button x:Name="btnCamara" x:Id="btnCamara" Text="Usar cámara" Clicked="btnFoto_Clicked"/>
        <Button x:Name="btnGaleria" x:Id="btnGaleria" Text="Seleccionar de la galería" Clicked="btnFoto_Clicked"/>
        <Button x:Name="btnAnalizarImagen" Text="Analizar imagen" Clicked="btnAnalizarImagen_Clicked"/>
        <Label x:Name="lblAdulto" Text="---" />
        <Label x:Name="lblRacista" Text="---" />
        <Label x:Name="lblCategorias" Text="---" />
        <Label x:Name="lblColor" Text="---" />
        <Label x:Name="lblTags" Text="---" />
        <Label x:Name="lblCaptions" Text="---" />
        <Label x:Name="lblCaras" Text="---" />
        <Label x:Name="lblTags2" Text="---" />
    </StackLayout>
	
CODIGO C#

using System.IO;
using ServiciosCognitivos.Clases;

static Stream streamCopy;

        async void btnFoto_Clicked(object sender, EventArgs e)
        {
            var usarCamara = ((Button)sender).Text.Contains("cámara");

            var file = await ServicioImagenes.TomarFoto(usarCamara);
            imgFoto.Source = ImageSource.FromStream(() =>
            {
                var stream = file.GetStream();
                streamCopy = new MemoryStream();
                stream.CopyTo(streamCopy);
                stream.Seek(0, SeekOrigin.Begin);
                file.Dispose();
                return stream;
            });
        }

        async void btnAnalizarImagen_Clicked(object sender, EventArgs e)
        {
            if (streamCopy != null)
            {
                streamCopy.Seek(0, SeekOrigin.Begin);
                var vision = await ServicioComputerVision.ObtenerDescripcionImagen(streamCopy);

                var adulto = vision.Adult;
                lblAdulto.Text = String.Format("Contenido Adulto: {0} ({1})", adulto.IsAdultContent, adulto.AdultScore.ToString("P4"));
                lblRacista.Text = String.Format("Contenido Racista: {0} ({1})", adulto.IsRacyContent, adulto.RacyScore.ToString("P4"));

                var categorias = vision.Categories;
                lblCategorias.Text = "Categorias: ";
                categorias.ToList().ForEach(cat => lblCategorias.Text =
                        lblCategorias.Text + String.Format("{0} ({1}), ", cat.Name, cat.Score.ToString("P4")));

                var color = vision.Color;
                lblColor.Text = String.Format("Accent Color: {0}\nColor dominante:\nFondo: {1}\tFrente: {2}\n¿Es Blanco y Negro? {3}\nColores dominantes: ",
                    color.AccentColor, color.DominantColorBackground,
                    color.DominantColorForeground, color.IsBWImg);
                color.DominantColors.ToList().ForEach(x => lblColor.Text = lblColor.Text + x + ", ");

                var descripcion = vision.Description;
                lblTags.Text = "Tags: ";
                lblCaptions.Text = "Captions: ";
                vision.Description.Tags.ToList().ForEach(tag => lblTags.Text = lblTags.Text + tag + ", ");
                vision.Description.Captions.ToList().ForEach(cap => lblCaptions.Text = lblCaptions.Text + String.Format("{0} ({1}), ", cap.Text, cap.Confidence.ToString("P4")));

                var caras = vision.Faces;
                lblCaras.Text = "Caras: ";
                caras.ToList().ForEach(cara => lblCaras.Text = lblCaras.Text + String.Format("{0} ({1}), ", cara.Gender, cara.Age));

                var tags = vision.Tags;
                lblTags2.Text = "Tags 2: ";
                tags.ToList().ForEach(tag => lblTags2.Text = lblTags2.Text + String.Format("{0} - {1} ({2}), ", tag.Name, tag.Hint, tag.Confidence.ToString("P4")));
            }
        }

paso13. Crear la página 
CODIGO XAML

  <StackLayout>
    <Button x:Name="btnEmociones" Text="Analizar emociones" Clicked="btnEmociones_Clicked"/>
    <Button x:Name="btnVision" Text="Analizar imagen" Clicked="btnVision_Clicked"/>
  </StackLayout>

CODIGO C#

        void btnEmociones_Clicked(object sender, EventArgs e)
        {
            Navigation.PushAsync(new PaginaAnalisisEmociones());
        }

        void btnVision_Clicked(object sender, EventArgs e)
        {
            Navigation.PushAsync(new PaginaAnalisisComputerVision());
        }

Paso14. En el archivo App.xaml.cs en el constructor colocar
	MainPage = new NavigationPage(new Paginas.PaginaNavegacion());

	
